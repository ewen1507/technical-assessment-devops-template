on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Install dependencies
        run: poetry install --no-interaction
      - name: Lint with Ruff
        run: |
          python -m pip install --upgrade pip
          python -m pip install ruff
          ruff check --output-format=github .
        continue-on-error: true
      - name: Run tests
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov
          pytest --cov-report term-missing --cov=lambda_app/ tests/
        continue-on-error: true
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker Image
        run: docker build -t lambda-function .
      - name: Run Lambda Tests with `test_lambda.sh`
        run: |
          chmod +x scripts/test_lambda.sh
          docker run -p 3001:8080 lambda-function &
          sleep 5
          ./scripts/test_lambda.sh

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Push Docker Image to Registry
        run: |
          docker build -t lambda-function .
          docker tag lambda-function localhost:5000/lambda-function
          docker push localhost:5000/lambda-function
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
